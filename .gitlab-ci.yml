# stages:
#   - build_docker
#   - deploy

# variables:
#   KUBECONFIG:  /root/.kube/config

# image_build_release:
#   image: jdrouet/docker-with-buildx:stable
#   stage: build_docker
#   only:
#     - tags
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://localhost:2375/
#     DOCKER_DRIVER: overlay2
#   before_script:
#     - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#   script:
#     - docker buildx create --use
#     - docker buildx build  --push --platform linux/arm64,linux/amd64 -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .

# # deploy:
# #   image: dtzar/helm-kubectl
# #   stage: deploy
# #   only:
# #       - tags
# #   environment:
# #     name: production
# #   before_script:
# #       - sed -ie "s/deploy-date-value/$(date)/g" kubernetes/pipeline_deployment.yaml
# #       - mkdir -p /root/.kube/ && touch /root/.kube/config
# #       - echo ${KUBERNETES_KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
# #   script:
# #       - kubectl apply -f kubernetes/pipeline_deployment.yaml


image: docker:20.10.8

services:
  - docker:20.10.8-dind

variables:
  DOCKER_DRIVER: overlay2
  BUILDX_VERSION: "v0.6.1"
  BUILDX_ARCH: "linux-amd64"

docker-build:
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username
      $CI_REGISTRY_USER --password-stdin
    - wget -O /usr/bin/docker-buildx
      https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.${BUILDX_ARCH}
    - chmod +x /usr/bin/docker-buildx
  script:
    - docker-buildx create --use
    - docker buildx build  --push --platform linux/arm64,linux/amd64 -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .